name: Docker Image Publish 
 
on:
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: myapp


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4' # optional

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: v0.10.0

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: ${{ github.ref_name }}
          labels: latest
          
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: . 
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

#      - name: access on k8s Kind Cluster
#        uses: helm/kind-action@v1.4.0
#        with:
#          kube-config-base64-data: ${{ secrets.KUBE_CONFIG_BASE64_DATA }}

#      - run: |          
#          docker pull ${{ env.DOCKER_METADATA_OUTPUT_TAGS }}
#          kubectl apply -f https://github.com/Alex-Elfman/MyApp/myapp-deploy.yml
#          kubectl cluster-info
#          kubectl get nodes         
## starts the cluster
#      - name: Testing on a k8s Kind Cluster
#        uses: helm/kind-action@v1.4.0
## makes sure cluster is up and running
#      - run: |
#          kubectl cluster-info
#          kubectl get nodes
#      - name : Preparing cluster for kube-ez
## Commands that setup the cluster as per my project needs
#        run: |
#          kubectl apply -f https://raw.githubusercontent.com/kitarp29/kube-ez/main/yamls/sa.yaml
#          kubectl apply -f https://raw.githubusercontent.com/kitarp29/kube-ez/main/yamls/crb.yaml
#          kubectl run kube-ez --image=${{ env.DOCKER_METADATA_OUTPUT_TAGS }}:${{ github.sha }} --port=8000
#          sleep 20
#          kubectl get po
#          kubectl port-forward kube-ez 8000:8000 &>/dev/null &
#          sleep 5
#          kubectl port-forward kube-ez 8000:8000 &>/dev/null &
#      - run: |
#          curl -i http://localhost:8000/          
      - name: Define environment url
        run: |
          pr_id=${{ github.event.number }}
          github_repository_id=$(echo ${GITHUB_REPOSITORY} | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z)
          echo WERF_SET_ENV_URL=envUrl=http://${github_repository_id}-${pr_id}.kube.DOMAIN >> $GITHUB_ENV

      - name: Converge
        uses: werf/actions/converge@v2
        with:
          env: review-${{ github.event.number }}
          kube-config-base64-data: ${{ secrets.KUBE_CONFIG_BASE64_DATA }}